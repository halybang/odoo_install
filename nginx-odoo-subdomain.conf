##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

##
# Configuration file for each subdomain <=> database.
# Should use with http.py patch, which using HTTP_X_CUSTOM_REFERRER as database name
#
##

server {
    listen      80;
    server_name subdomain.erphanoi.com;

    # Strict Transport Security
    add_header Strict-Transport-Security max-age=2592000;
    return 301 https://$host$request_uri;
}

server {

	# SSL configuration
	
	listen 443 ssl;
	server_name subdomain.erphanoi.com;

	#root /var/www/html;
	# Add index.php to the list if you are using PHP
	#index index.html index.htm index.nginx-debian.html;

	access_log /var/log/nginx/subdomain.access.log;
	error_log /var/log/nginx/subdomain.error.log;

	keepalive_timeout 60;
	client_max_body_size 100m;

	#
	# Self signed certs generated by the ssl-cert package
	
    ssl on;
    ssl_certificate /etc/nginx/sslkey/nginx.pem;
    ssl_certificate_key /etc/nginx/sslkey/nginx.key;
    #ssl_dhparam /etc/nginx/sskeyl/dhparam.pem;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    ssl_ciphers HIGH:!ADH:!MD5;
    #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    #ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";

    # increase proxy buffer to handle some OpenERP web requests
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    # general proxy settings
    # force timeouts if the backend dies
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

	# set headers
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-Host $http_host;
	proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;

	# Let the OpenERP web service know that weâ€™re using HTTPS, otherwise
	# it will generate URL using http:// and not https://
	proxy_set_header X-Forwarded-Proto https;
	proxy_set_header Front-End-Https On;
	
	# Point to real database name
	#proxy_set_header X-Custom-Referrer "bf978a07-f515-45ac-9be6-972ffbfc1931";

	# by default, do not forward anything
	# proxy_redirect off;
	proxy_buffering off;

	location / {
		#try_files $uri $uri/ @proxy;
		proxy_pass http://odoo9;
		proxy_redirect default;
	}

	location /longpolling {
		proxy_pass http://odoo9-im;
	}

	# cache some static data in memory for 60mins.
	# under heavy load this should relieve stress on the OpenERP web interface a bit.
	location ~* /web/static/ {
		proxy_cache_valid 200 60m;
		proxy_buffering on;
		expires 864000;
		#try_files $uri $uri/ @proxy;
		proxy_pass http://odoo9;
        #proxy_redirect default;
        #proxy_redirect off;
	}
	
	location @proxy {
        proxy_pass http://odoo9;
        proxy_redirect default;
        #proxy_redirect off;
    }	

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}
}
